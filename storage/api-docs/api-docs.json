{
    "openapi": "3.0.0",
    "info": {
        "title": "My Rest Api",
        "description": "Laravel project to practice developing Rest API with L5 Swagger OpenApi",
        "contact": {
            "name": "Victorio Putra Saritan",
            "email": "victorio.422023022@civitas.ukrida.ac.id"
        },
        "version": "1.0",
        "x-logo": {
            "url": "https://miro.medium.com/v2/resize:fit:1200/1*j3g3akaMpUOLegw0qthA.png"
        }
    },
    "paths": {
        "/api/user/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register new user & get token",
                "operationId": "register",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": {
                                "name": "Victorio Putra",
                                "email": "Benvictt@gmail.com",
                                "password": "putra123",
                                "password_confirmation": "putra123"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Log in to existing user & get token",
                "operationId": "login",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": {
                                "email": "Benvictt@gmail.com",
                                "password": "putra123"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/user/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Log out & destroy self token",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "User Email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport_token_ready": [],
                        "passport": []
                    }
                ]
            }
        },
        "/api/book": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Display a listing of items",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "current page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "_limit",
                        "in": "query",
                        "description": "max item in a page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 10
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "word to search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_publisher",
                        "in": "query",
                        "description": "search by publisher like name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_sort_by",
                        "in": "query",
                        "description": "word to search",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "latest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Book"
                ],
                "summary": "Store a newly created item",
                "operationId": "store",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book"
                            },
                            "example": {
                                "title": "Rich Dad Poor Dad: What the Rich Teach Their Kids About Money That the Poor and Middle Class Do Not!",
                                "author": "Robert T. Kiyosaki dengan Sharon Lechter",
                                "publisher": "Plata Publishing",
                                "publication_year": "2011",
                                "cover": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/book/1482170055i/33511107.jpg",
                                "description": "Rich Dad Poor Dad adalah buku yang mengubah cara orang memandang uang dan investasi. Robert T. Kiyosaki menceritakan pengalamannya dibesarkan oleh dua \n    *                        ayah—ayah kandungnya yang miskin dan ayah angkatnya yang kaya—dan pelajaran yang dia pelajari dari keduanya. Buku ini menekankan pentingnya literasi finansial, investasi, dan pengelolaan keuangan yang bijak. Kiyosaki mengajak pembaca untuk berpikir kritis tentang bagaimana mereka dapat mencapai kebebasan finansial melalui pendidikan dan pengambilan keputusan yang tepat.",
                                "price": 204000
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport_token_ready": [],
                        "passport": []
                    }
                ]
            }
        },
        "/api/book/{id}": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Display the specified item",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of item that needs to be displayed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Book"
                ],
                "summary": "Update the specified item",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of item that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book"
                            },
                            "example": {
                                "title": "Rich Dad Poor Dad: What the Rich Teach Their Kids About Money That the Poor and Middle Class Do Not!",
                                "author": "Robert T. Kiyosaki dengan Sharon Lechter",
                                "publisher": "Plata Publishing",
                                "publication_year": "2011",
                                "cover": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/book/1482170055i/33511107.jpg",
                                "description": "Rich Dad Poor Dad adalah buku yang mengubah cara orang memandang uang dan investasi. Robert T. Kiyosaki menceritakan pengalamannya dibesarkan oleh dua \n    *                        ayah—ayah kandungnya yang miskin dan ayah angkatnya yang kaya—dan pelajaran yang dia pelajari dari keduanya. Buku ini menekankan pentingnya literasi finansial, investasi, dan pengelolaan keuangan yang bijak. Kiyosaki mengajak pembaca untuk berpikir kritis tentang bagaimana mereka dapat mencapai kebebasan finansial melalui pendidikan dan pengambilan keputusan yang tepat.",
                                "price": 204000
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport_token_ready": [],
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Book"
                ],
                "summary": "Remove the specified item",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of item that needs to be removed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport_token_ready": [],
                        "passport": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Book": {
                "title": "Book model",
                "description": "Book model",
                "required": [
                    "title",
                    "author"
                ],
                "xml": {
                    "name": "Book"
                }
            },
            "User": {
                "title": "User model",
                "description": "User model",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "passport_token_ready": {
                "type": "http",
                "scheme": "bearer",
                "description": "Enter token in format without \"Bearer \"",
                "name": "Authorization",
                "in": "header"
            },
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    }
}